<Project Sdk="Microsoft.NET.Sdk.Razor">

  <Import Project="..\..\Build\Blazorise.props" />

  <PropertyGroup>
    <PackageTags>blazorise blazor components</PackageTags>
    <BlazorWebAssemblyLoadAllGlobalizationData>true</BlazorWebAssemblyLoadAllGlobalizationData>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <Content Remove="compilerconfig.json" />
    <Content Remove="package.json" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\LICENSE.md" Pack="true" Visible="false" PackagePath="" />
    <None Include="..\..\NuGet\Blazorise.png" Pack="true" Visible="false" PackagePath="" />
    <None Include="package.json" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="Resources\Localization\**\*.json" />
    <EmbeddedResource Include="Resources\Localization\**\*.json" />
    <None Remove="Resources\Localization\*.json" />
    <EmbeddedResource Include="Resources\Localization\*.json" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\SourceGenerators\Blazorise.Generator.Features\Blazorise.Generator.Features.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\SourceGenerators\Blazorise.Generator\Blazorise.Generator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" PrivateAssets="all" />
    <!-- Exclude the output of source generators from the compilation -->
    <Compile Remove="$(CompilerGeneratedFilesOutputPath)/**/*.cs" />
  </ItemGroup>

  <PropertyGroup>
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <CompilerGeneratedFilesOutputPath>__SOURCEGENERATED__</CompilerGeneratedFilesOutputPath>
  </PropertyGroup>

  <!-- Note: only copy files in debug mode, we don't want automatic actions in release mode / during publishing -->

  <Target Name="PreBuild - Copy javascript dependencies" 
		  AfterTargets="NpmInstall" 
		  Condition="'$(Configuration)'=='Debug'">
    <Exec Command="xcopy /y &quot;$(ProjectDir)node_modules\autonumeric\dist\autoNumeric.min.js&quot; &quot;$(ProjectDir)wwwroot\vendors\autoNumeric.js&quot;" />
	<Exec Command="xcopy /y &quot;$(ProjectDir)node_modules\flatpickr\dist\flatpickr.min.js&quot; &quot;$(ProjectDir)wwwroot\vendors\flatpickr.js&quot;" />
	<Exec Command="xcopy /y &quot;$(ProjectDir)node_modules\inputmask\dist\inputmask.min.js&quot; &quot;$(ProjectDir)wwwroot\vendors\inputmask.js&quot;" />
  </Target>

  <Target Name="NpmInstall" Inputs="package.json" 
		  Outputs="node_modules/.install-stamp" 
		  BeforeTargets="BeforeBuild" 
		  Condition="'$(Configuration)'=='Debug'">
    <!--
      Use npm install or npm ci depending on RestorePackagesWithLockFile value.
      Uncomment the following lines if you want to use this feature:

      <PropertyGroup>
          <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
      </PropertyGroup>
      -->
    <Exec Command="npm ci" Condition="'$(RestorePackagesWithLockFile)' == 'true'" />
    <Exec Command="npm install" Condition="'$(RestorePackagesWithLockFile)' != 'true'" />

    <!-- Write the stamp file, so incremental builds work -->
    <Touch Files="node_modules/.install-stamp" AlwaysCreate="true" />
  </Target>
	
</Project>
